
pip install -r requirements.txt
pip install -r requirements-dev.txt
playwright install chromium
python run.py

streamlit run app.py



pip install -r requirements.txt
python -m streamlit run main.py


cd D:\durgas\appointment360-main\django
venv\Scripts\activate
pip install --upgrade pip setuptools wheel
pip cache purge
pip install -r requirements-no-postgres.txt


python manage.py createsuperuser



venv\Scripts\activate
python manage.py migrate
python manage.py makemigrations 
python manage.py runserver


docker-compose up --build

# Navigate to project
cd d:\durgas\appointment360-main

# Run all fast tests (recommended first)
pytest test/ -v -m "not slow"

# Or run specific test file
pytest test/test_url_extraction.py -v

# Or run single test to verify
pytest test/test_url_extraction.py::TestURLCSVProcessorBasics::test_initialization -v

cd test/code_analysis

# Simple analysis
python analyze_imports.py

# Validation
python import_validator.py . -s

# Standardization (safe)
python import_standardizer.py . --dry-run

run.bat
# Installation Commands
pip install -r requirements.txt
python -m streamlit run main.py

python3 -Bc "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('*.py[co]')]"
python3 -Bc "import pathlib; [p.rmdir() for p in pathlib.Path('.').rglob('__pycache__')]"

# Run the main application
streamlit run app.py

# Alternative way to run the application

python -m streamlit run app_refactored.py

# Test the database functionality
python test_database.py

# Test the pagination fixes
python test_fixes.py

# View the HTML demo (open in browser)
# Open demo.html in your web browser to see the modern table design

# Additional useful commands
# Install specific packages if needed
pip install st-aggrid
pip install streamlit-option-menu
pip install plotly

# Check installed packages
pip list | grep streamlit


python manage.py test apps.scrapers.tests.test_ai_scraper -v 2

git init
git add .
git commit -m "29-8-2025"
git remote add origin https://github.com/thekoushikdurgas/appointment360.git
git branch -M main
git push -u origin main -f


git init
git remote add origin https://github.com/thekoushikdurgas/appointment360.git
git branch -M main



git add .
git commit -m "10/7/2025"
git push -u origin main -f

git config --global user.email "koushik.btech.cse.19@nitap.ac.in"
git config --global user.name "thekoushikdurgas"


At first, @ko.html  properly see the login popup as a class top-level-modal-container and then properly handles the popup to remove it and then In my scraping technique, when you take HTML from a URL, the url website has infinite scrolling, so you scroll to the last and then take the HTML and then you can take jobs And also in HTML, there is a button named "See more jobs", if you find that button, click it so we get more jobs loaded, but again, this button comes after clicking that button, so before scraping jobs, check in HTML if there is any "See more jobs" button, if you find click it and we get more jobs but, not find any button so then scrape it, Learn, understand, and analyse this deeply, and then break your tasks into smaller tasks.